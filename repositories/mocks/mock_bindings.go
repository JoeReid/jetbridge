// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/JoeReid/jetbridge/repositories (interfaces: Bindings)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	repositories "github.com/JoeReid/jetbridge/repositories"
	gomock "github.com/golang/mock/gomock"
)

// MockBindings is a mock of Bindings interface.
type MockBindings struct {
	ctrl     *gomock.Controller
	recorder *MockBindingsMockRecorder
}

// MockBindingsMockRecorder is the mock recorder for MockBindings.
type MockBindingsMockRecorder struct {
	mock *MockBindings
}

// NewMockBindings creates a new mock instance.
func NewMockBindings(ctrl *gomock.Controller) *MockBindings {
	mock := &MockBindings{ctrl: ctrl}
	mock.recorder = &MockBindingsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBindings) EXPECT() *MockBindingsMockRecorder {
	return m.recorder
}

// ListJetstreamBindings mocks base method.
func (m *MockBindings) ListJetstreamBindings(arg0 context.Context) ([]repositories.JetstreamBinding, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListJetstreamBindings", arg0)
	ret0, _ := ret[0].([]repositories.JetstreamBinding)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListJetstreamBindings indicates an expected call of ListJetstreamBindings.
func (mr *MockBindingsMockRecorder) ListJetstreamBindings(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListJetstreamBindings", reflect.TypeOf((*MockBindings)(nil).ListJetstreamBindings), arg0)
}
