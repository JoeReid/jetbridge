// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/JoeReid/jetbridge/repositories (interfaces: MessageHandler)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	repositories "github.com/JoeReid/jetbridge/repositories"
	gomock "github.com/golang/mock/gomock"
)

// MockMessageHandler is a mock of MessageHandler interface.
type MockMessageHandler struct {
	ctrl     *gomock.Controller
	recorder *MockMessageHandlerMockRecorder
}

// MockMessageHandlerMockRecorder is the mock recorder for MockMessageHandler.
type MockMessageHandlerMockRecorder struct {
	mock *MockMessageHandler
}

// NewMockMessageHandler creates a new mock instance.
func NewMockMessageHandler(ctrl *gomock.Controller) *MockMessageHandler {
	mock := &MockMessageHandler{ctrl: ctrl}
	mock.recorder = &MockMessageHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMessageHandler) EXPECT() *MockMessageHandlerMockRecorder {
	return m.recorder
}

// HandleJetstreamMessages mocks base method.
func (m *MockMessageHandler) HandleJetstreamMessages(arg0 context.Context, arg1 repositories.JetstreamBinding, arg2 []repositories.JetstreamMessage) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleJetstreamMessages", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// HandleJetstreamMessages indicates an expected call of HandleJetstreamMessages.
func (mr *MockMessageHandlerMockRecorder) HandleJetstreamMessages(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleJetstreamMessages", reflect.TypeOf((*MockMessageHandler)(nil).HandleJetstreamMessages), arg0, arg1, arg2)
}
